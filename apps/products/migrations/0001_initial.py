# Generated by Django 5.2.6 on 2025-09-11 13:15

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=150)),
                ("slug", models.SlugField(max_length=170, unique=True)),
                ("is_active", models.BooleanField(default=True)),
                ("description", models.TextField(blank=True)),
            ],
            options={
                "ordering": ["name"],
                "indexes": [
                    models.Index(fields=["slug"], name="products_ca_slug_da4386_idx")
                ],
            },
        ),
        migrations.CreateModel(
            name="Color",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                (
                    "hex_code",
                    models.CharField(
                        help_text="Color hex code (e.g., #FF5733)",
                        max_length=7,
                        unique=True,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "ordering": ["name"],
                "indexes": [
                    models.Index(fields=["name"], name="products_co_name_502f66_idx")
                ],
            },
        ),
        migrations.CreateModel(
            name="Size",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Size name (e.g., S, M, L, XL, 32, 10.5)",
                        max_length=20,
                        unique=True,
                    ),
                ),
                (
                    "abbreviation",
                    models.CharField(
                        blank=True, help_text="Short form (e.g., S, M, L)", max_length=5
                    ),
                ),
                (
                    "sort_order",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Sort order for sizes (lower numbers first)",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "ordering": ["sort_order", "name"],
                "indexes": [
                    models.Index(
                        fields=["sort_order"], name="products_si_sort_or_781563_idx"
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Tag name (e.g., case, wireless, car)",
                        max_length=50,
                        unique=True,
                    ),
                ),
                ("slug", models.SlugField(max_length=60, unique=True)),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "ordering": ["name"],
                "indexes": [
                    models.Index(fields=["slug"], name="products_ta_slug_d1be68_idx")
                ],
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=220)),
                ("slug", models.SlugField(max_length=240, unique=True)),
                ("small_description", models.TextField(blank=True)),
                ("large_description", models.TextField(blank=True)),
                (
                    "sku",
                    models.CharField(
                        help_text="Stock Keeping Unit - unique product identifier",
                        max_length=50,
                        unique=True,
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Product price in the default currency",
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                    ),
                ),
                (
                    "compare_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Original/compare price for showing discounts",
                        max_digits=10,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                    ),
                ),
                (
                    "stock_quantity",
                    models.PositiveIntegerField(
                        default=0, help_text="Available stock quantity"
                    ),
                ),
                (
                    "is_featured",
                    models.BooleanField(
                        default=False,
                        help_text="Featured products for homepage/special sections",
                    ),
                ),
                ("meta_title", models.CharField(blank=True, max_length=255)),
                ("meta_description", models.CharField(blank=True, max_length=255)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "categories",
                    models.ManyToManyField(
                        blank=True, related_name="products", to="products.category"
                    ),
                ),
                (
                    "colors",
                    models.ManyToManyField(
                        blank=True, related_name="products", to="products.color"
                    ),
                ),
                (
                    "sizes",
                    models.ManyToManyField(
                        blank=True, related_name="products", to="products.size"
                    ),
                ),
                (
                    "tags",
                    models.ManyToManyField(
                        blank=True, related_name="products", to="products.tag"
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="AdditionalInfo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "weight",
                    models.CharField(
                        blank=True, help_text="e.g., '400 g'", max_length=50
                    ),
                ),
                (
                    "dimensions",
                    models.CharField(
                        blank=True, help_text="e.g., '10 x 10 x 15 cm'", max_length=100
                    ),
                ),
                (
                    "materials",
                    models.CharField(
                        blank=True,
                        help_text="e.g., '60% cotton, 40% polyester'",
                        max_length=200,
                    ),
                ),
                (
                    "other_info",
                    models.TextField(
                        blank=True, help_text="Any other product information"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="additional_info",
                        to="products.product",
                    ),
                ),
            ],
            options={
                "ordering": ["product", "id"],
                "indexes": [
                    models.Index(
                        fields=["product"], name="products_ad_product_26eaf5_idx"
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="ProductImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        help_text="Product image file", upload_to="products/images/"
                    ),
                ),
                (
                    "alt_text",
                    models.CharField(
                        blank=True,
                        help_text="Alternative text for accessibility",
                        max_length=200,
                    ),
                ),
                (
                    "is_primary",
                    models.BooleanField(
                        default=False,
                        help_text="Primary image shown in product listings",
                    ),
                ),
                (
                    "sort_order",
                    models.PositiveIntegerField(
                        default=0, help_text="Display order (lower numbers first)"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="products.product",
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order", "id"],
                "indexes": [
                    models.Index(
                        fields=["product", "is_primary"],
                        name="products_pr_product_1b7905_idx",
                    ),
                    models.Index(
                        fields=["product", "sort_order"],
                        name="products_pr_product_f88290_idx",
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(fields=["slug"], name="products_pr_slug_3edc0c_idx"),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["is_active", "created_at"],
                name="products_pr_is_acti_defdf1_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(fields=["sku"], name="products_pr_sku_ca0cdc_idx"),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["is_featured", "is_active"],
                name="products_pr_is_feat_a1ecf6_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(fields=["price"], name="products_pr_price_9b1a5f_idx"),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["stock_quantity"], name="products_pr_stock_q_ba97b5_idx"
            ),
        ),
    ]
