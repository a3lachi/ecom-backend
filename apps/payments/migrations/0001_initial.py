# Generated by Django 5.2.6 on 2025-09-15 13:50

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("orders", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="PaymentMethod",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "provider",
                    models.CharField(
                        choices=[
                            ("PAYPAL", "PayPal"),
                            ("CAIXA", "Caixa"),
                            ("BIZUM", "Bizum"),
                            ("BINANCE_PAY", "Binance Pay"),
                        ],
                        max_length=20,
                        unique=True,
                    ),
                ),
                ("display_name", models.CharField(max_length=100)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "configuration",
                    models.JSONField(
                        default=dict,
                        help_text="Provider-specific settings like API keys, endpoints, etc.",
                    ),
                ),
                ("logo_url", models.URLField(blank=True)),
                ("description", models.TextField(blank=True)),
                ("sort_order", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "payments_methods",
                "ordering": ["sort_order", "display_name"],
            },
        ),
        migrations.CreateModel(
            name="Payment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "payment_id",
                    models.CharField(db_index=True, max_length=64, unique=True),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("PROCESSING", "Processing"),
                            ("COMPLETED", "Completed"),
                            ("FAILED", "Failed"),
                            ("CANCELLED", "Cancelled"),
                            ("REFUNDED", "Refunded"),
                            ("PARTIALLY_REFUNDED", "Partially Refunded"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                (
                    "payment_type",
                    models.CharField(
                        choices=[
                            ("PAYMENT", "Payment"),
                            ("REFUND", "Refund"),
                            ("PARTIAL_REFUND", "Partial Refund"),
                        ],
                        default="PAYMENT",
                        max_length=20,
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=12,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                    ),
                ),
                ("currency", models.CharField(default="USD", max_length=3)),
                (
                    "provider_transaction_id",
                    models.CharField(
                        blank=True,
                        help_text="Transaction ID from payment provider",
                        max_length=255,
                    ),
                ),
                (
                    "provider_response",
                    models.JSONField(
                        default=dict, help_text="Full response from payment provider"
                    ),
                ),
                ("success_url", models.URLField(blank=True)),
                ("cancel_url", models.URLField(blank=True)),
                ("webhook_url", models.URLField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("processed_at", models.DateTimeField(blank=True, null=True)),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                ("failure_reason", models.TextField(blank=True)),
                ("notes", models.TextField(blank=True)),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="payments",
                        to="orders.order",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="payments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "payment_method",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="payments",
                        to="payments.paymentmethod",
                    ),
                ),
            ],
            options={
                "db_table": "payments_payments",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="PaymentTransaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("CREATED", "Created"),
                            ("AUTHORIZED", "Authorized"),
                            ("CAPTURED", "Captured"),
                            ("FAILED", "Failed"),
                            ("CANCELLED", "Cancelled"),
                            ("REFUNDED", "Refunded"),
                            ("WEBHOOK_RECEIVED", "Webhook Received"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=12, null=True
                    ),
                ),
                (
                    "provider_transaction_id",
                    models.CharField(blank=True, max_length=255),
                ),
                ("provider_response", models.JSONField(default=dict)),
                ("success", models.BooleanField(default=True)),
                ("error_message", models.TextField(blank=True)),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "payment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transactions",
                        to="payments.payment",
                    ),
                ),
            ],
            options={
                "db_table": "payments_transactions",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="PaymentWebhook",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("event_type", models.CharField(max_length=100)),
                ("event_id", models.CharField(blank=True, max_length=255)),
                ("payload", models.JSONField()),
                ("processed", models.BooleanField(default=False)),
                ("processed_at", models.DateTimeField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True)),
                ("headers", models.JSONField(default=dict)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "payment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="webhooks",
                        to="payments.payment",
                    ),
                ),
                (
                    "payment_method",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="webhooks",
                        to="payments.paymentmethod",
                    ),
                ),
            ],
            options={
                "db_table": "payments_webhooks",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddIndex(
            model_name="payment",
            index=models.Index(fields=["order"], name="payments_pa_order_i_a64b65_idx"),
        ),
        migrations.AddIndex(
            model_name="payment",
            index=models.Index(
                fields=["user", "status"], name="payments_pa_user_id_273df2_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="payment",
            index=models.Index(
                fields=["payment_method", "status"],
                name="payments_pa_payment_455c07_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="payment",
            index=models.Index(
                fields=["provider_transaction_id"],
                name="payments_pa_provide_795161_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="payment",
            index=models.Index(
                fields=["status", "created_at"], name="payments_pa_status_80fb12_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="paymenttransaction",
            index=models.Index(
                fields=["payment", "action"], name="payments_tr_payment_9aa8ed_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="paymenttransaction",
            index=models.Index(
                fields=["created_at"], name="payments_tr_created_d8738f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="paymentwebhook",
            index=models.Index(
                fields=["payment_method", "processed"],
                name="payments_we_payment_326194_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="paymentwebhook",
            index=models.Index(
                fields=["event_type"], name="payments_we_event_t_66e751_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="paymentwebhook",
            index=models.Index(
                fields=["created_at"], name="payments_we_created_93c34d_idx"
            ),
        ),
    ]
